/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var C=Object.defineProperty;var $=Object.getOwnPropertyDescriptor;var B=Object.getOwnPropertyNames;var U=Object.prototype.hasOwnProperty;var W=(g,o)=>{for(var e in o)C(g,e,{get:o[e],enumerable:!0})},j=(g,o,e,r)=>{if(o&&typeof o=="object"||typeof o=="function")for(let l of B(o))!U.call(g,l)&&l!==e&&C(g,l,{get:()=>o[l],enumerable:!(r=$(o,l))||r.enumerable});return g};var O=g=>j(C({},"__esModule",{value:!0}),g);var q={};W(q,{default:()=>x});module.exports=O(q);var i=require("obsidian"),f=require("@codemirror/view"),F=require("@codemirror/state"),R=require("@codemirror/language"),w={xsColor:"#fff2c8",smColor:"#eadbf6",mdColor:"#c5f2cd",lgColor:"#f9caca",xlColor:"#d1f6f4",textColor:"#222222",enabled:!1,xsThreshold:2,smThreshold:5,mdThreshold:10,lgThreshold:20,treatLineBreakAsSentenceEnd:!1},x=class extends i.Plugin{async onload(){await this.loadSettings(),this.addCommand({id:"toggle-sentence-highlighting",name:"Toggle highlighting",callback:()=>{this.settings.enabled=!this.settings.enabled,this.saveSettings(),new i.Notice(`Sentence highlighting ${this.settings.enabled?"enabled":"disabled"}`)}}),this.addSettingTab(new E(this.app,this)),this.registerEditorExtension(this.createViewPlugin()),this.updateStyles()}updateStyles(){document.documentElement.style.setProperty("--sentence-length-highlight-color-xs",this.settings.xsColor),document.documentElement.style.setProperty("--sentence-length-highlight-color-sm",this.settings.smColor),document.documentElement.style.setProperty("--sentence-length-highlight-color-md",this.settings.mdColor),document.documentElement.style.setProperty("--sentence-length-highlight-color-lg",this.settings.lgColor),document.documentElement.style.setProperty("--sentence-length-highlight-color-xl",this.settings.xlColor),document.documentElement.style.setProperty("--sentence-length-highlight-text-color",this.settings.textColor)}onunload(){document.documentElement.style.removeProperty("--sentence-length-highlight-color-xs"),document.documentElement.style.removeProperty("--sentence-length-highlight-color-sm"),document.documentElement.style.removeProperty("--sentence-length-highlight-color-md"),document.documentElement.style.removeProperty("--sentence-length-highlight-color-lg"),document.documentElement.style.removeProperty("--sentence-length-highlight-color-xl")}async loadSettings(){this.settings=Object.assign({},w,await this.loadData())}async saveSettings(){await this.saveData(this.settings),this.forceViewUpdate=!0,document.body.classList.toggle("sentence-length-highlighting-active",this.settings.enabled),this.app.workspace.updateOptions()}createViewPlugin(){let e=this;class r{constructor(t){this.decorations=this.buildDecorations(t)}update(t){(t.docChanged||t.viewportChanged||e.forceViewUpdate)&&(this.decorations=this.buildDecorations(t.view),e.forceViewUpdate=!1)}buildDecorations(t){if(!e.settings.enabled)return f.Decoration.none;let n=new F.RangeSetBuilder,d=t.state.doc.toString(),h=[];for(let{from:b,to:m}of t.visibleRanges)(0,R.syntaxTree)(t.state).iterate({from:b,to:m,enter(a){(a.name.includes("code")||a.name.includes("comment")||a.name.includes("link")||a.name.includes("url")||a.name.includes("header"))&&h.push({min:a.from,max:a.to})}});let u=[".","?",":","!","\u3002","\u2026","\xB7"],y=['"',"'","`","\u2019","\u201D","\u3002"],S=u.join("");S=S.replace(".","");let v=`.+?(?:\\n|[${S}]+[${y.join("")}]{0,1}|[.]+[${y.join("")}]{0,1}(?:[${y.join("")}]|\\s|$))`,A=new RegExp(v,"g"),s;for(;(s=A.exec(d))!==null;){if(s[0].endsWith(`
`)&&!e.settings.treatLineBreakAsSentenceEnd&&!u.contains(s[0][s[0].length-2])){if(!(u.contains(s[0][s[0].length-3])&&y.contains(s[0][s[0].length-2])))continue}let b=s[0].length-s[0].replace(/^[\s>*]*/,"").length,m=s.index+b,a=0-b;s[0].endsWith(" ")&&a--;let P=m+s[0].length+a;if(h.some(V=>m<=V.max&&P>V.min))continue;let k=s[0].trim(),T="[a-zA-Z0-9\\u00C0-\\u00FF\\u0100-\\u017F]+",N=`${T}(?:['\u2019]${T})*`,L=new RegExp(`${N}|[\\u4E00-\\u9FFF]|[\\u3040-\\u309F]|[\\u30A0-\\u30FF]|[\\uAC00-\\uD7A3]|[\\uF900-\\uFAFF]|[\\uFF66-\\uFF9F]`,"gu"),D=k.match(L),p=D?D.length:0,c="";p<=e.settings.xsThreshold?c="xs":p<=e.settings.smThreshold?c="sm":p<=e.settings.mdThreshold?c="md":p<=e.settings.lgThreshold?c="lg":c="xl",p>0&&n.add(m,P,f.Decoration.mark({class:`sentence-length-${c}`}))}return n.finish()}}return f.ViewPlugin.fromClass(r,{decorations:l=>l.decorations})}},E=class extends i.PluginSettingTab{constructor(e,r){super(e,r);this.plugin=r}async hide(){await this.plugin.saveSettings()}display(){let{containerEl:e}=this;e.empty(),new i.Setting(e).setName("Enable highlighting").setDesc("You can also toggle on and off from the command palette").addToggle(t=>t.setValue(this.plugin.settings.enabled).onChange(async n=>{this.plugin.settings.enabled=n,await this.plugin.saveSettings()})),new i.Setting(e).setName("Colors").setHeading();let r={xsColor:"Extra short",smColor:"Short",mdColor:"Medium",lgColor:"Long",xlColor:"Extra long",textColor:"Text color"};for(let t in r){let n=t;typeof this.plugin.settings[n]=="string"&&new i.Setting(e).setName(r[t]).setDesc(`(Default: ${w[n]})`).addColorPicker(d=>d.setValue(this.plugin.settings[n]).onChange(async h=>{this.plugin.settings[n]=h,this.plugin.updateStyles(),await this.plugin.saveSettings()}))}new i.Setting(e).setName("Lengths").setDesc("Less than or equal to").setHeading();let l={xsThreshold:"Extra short",smThreshold:"Short",mdThreshold:"Medium",lgThreshold:"Long"};for(let t in l){let n=t;typeof this.plugin.settings[n]=="number"&&new i.Setting(e).setName(l[t]).setDesc(`(Default: ${w[n]})`).addText(d=>d.setValue(String(this.plugin.settings[n])).onChange(async h=>{let u=Number(h);this.plugin.settings[n]=u,this.plugin.updateStyles(),await this.plugin.saveSettings()}))}new i.Setting(e).setName("Advanced settings").setHeading(),new i.Setting(e).setName("Treat line break as sentence boundary").setDesc("Disabled by default. When disabled lines require a distinct end-of-sentence punctuation character to be highlighted").addToggle(t=>t.setValue(this.plugin.settings.treatLineBreakAsSentenceEnd).onChange(async n=>{this.plugin.settings.treatLineBreakAsSentenceEnd=n,await this.plugin.saveSettings()}))}};

/* nosourcemap */